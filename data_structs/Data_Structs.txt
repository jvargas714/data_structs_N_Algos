Structures to know 

1. Singly Linked List (circular and non-circular)

2. Doubly linked list (circular and non-circular)

3. Array 

4. Stack LIFO

5. Queue FIFO
	- two operations 
		1. enqueue -- add an element to the queue
		2. dequeue -- remove element from the queue 

6. Priority Queue
	- like a queue but elements have a priority associated with them
	- an element with a high priority is served before an element with low priority. 
	- typically implemented with heaps 

7. heap
	- specialized tree based data structure that satisfies the heap property: if A is a parent node
		of B then the key (the value) of node A is ordered with respect to the key of node B with 
		the same ordering applying across the heap.
	- two types of heaps 
		* max heap: keys of parent nodes are always greater than or equal to those of the children
			and the highest key is in the root node. 
		* min heap: he keys of parent nodes are less than or equal to those of the children and the 
			lowest key is in the root node.

8. list 

9. map 

10. Red Black Tree 
	- 

11. Hash Table
	- used to implement an associative array, a structure that can map keys to values. 
	- uses a hash function to compute an index into an array of buckets or slots, from which desired
		values can be found. 
	- can have hash collisions 
	- understand hashing functions 

12. Binary Search Tree 